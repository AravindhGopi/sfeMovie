{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red240\green240\blue240;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14300\viewh13900\viewkind0
\deftab560
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\f0\b\fs24 \cf2 \CocoaLigature0 \

\fs72 sfeMovie library
\fs36 \
\
1. What is sfe::Movie?\
2. Dependencies\
3. License\
3. System requirements\
4. How to use sfe::Movie?\
5. Supported file formats\
6. Currently implemented features\
7. Currently not implemented features\
8. Sample code\
9. Contact\
10. Thanks\
\
\
1. What is sfe::Movie?
\b0\fs24 \
\
sfe::Movie (or sfeMovie) is a class relying on SFML and FFmpeg to display movies. It supports\
both audio and video, and basic controls.\
\
It's been written to work closely with SFML and tries to keep the same easy-to-use paradigm,\
while being coherent with SFML's conventions.\
\
\

\b\fs36 2. Dependencies
\b0\fs24 \
\
sfe::Movie relies on SFML 2.0, you can find the required SFML libraries\
in the extlib directory. These represent SFML 2.0 as of revision 1791\
from the official SFML Subversion repository.\
\
There is no other specific dependency you have to care about.\
\
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b\fs36 \cf0 3. License
\b0\fs24 \cf2 \
\
libsfe-movie is statically linked against FFmpeg. Thus you don't need to care about\
the FFmpeg libraries, but libsfe-movie is itself covered by the LGPL license.\
\
Basically, this means you can use sfeMovie for ANY project without ANY restriction until\
libsfe-movie is linked dynamically to your software. As soon as you link libsfe-movie statically,\
your software is also covered by the LGPL licence and you MUST provide the sources of your\
application/library. \
\
\pard\pardeftab720\ql\qnatural
\cf0 \'ab This software uses code of FFmpeg (http://ffmpeg.org/) licensed under the LGPLv2.1\
(http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html) and its source can be downloaded\
at http://lucas.soltic.perso.esil.univmed.fr/downloads/sfemovie-src.zip. \'bb\cf2 \
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural
\cf2 \
See http://www.gnu.org/licenses/lgpl.html for more information on LGPL.\
\
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b\fs36 \cf0 3. System requirements
\b0\fs24 \cf2 \
\
sfeMovie is known to work fine on both Mac OS X and Windows, but is unstable on Linux.\
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b \cf2 Linux
\b0 \
OS version: N/A\
Architecture: N/A\
\

\b Mac OS X
\b0 \
OS version: Mac OS X 10.5 and later\
Architecture: Intel 32 bits and Intel 64 bits\
\

\b Windows
\b0 \
OS Version: Windows XP and later\
Architecture: N/A\
\
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b\fs36 \cf0 4. How to use sfe::Movie?
\b0\fs24 \cf2 \
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b \cf2 Linux
\b0 \
N/A\
\

\b Mac OS X
\b0 \

\i - with Xcode
\i0 \
Add the directory where you put Movie.h to the headers search path.\
Drag every library from "lib" and "extlib" to your project.\
Add a Copy File build phase to your project, and set the "Destination" of this phase to "Frameworks".\
Add all of the imported libraries to this build phase.\
Write your code and build your app.\
\

\i - without Xcode
\i0 \cf0 \
Write your code.\
Add the directory where you put Movie.h to the header search path (through option -I).\
\cf2 Add the directory/ies containing the libraries originally found in "lib" and "extlib" to the library\
search path (through option -L)\
Compile your application.\
Copy the libraries to your_app.app/Contents/Frameworks\
\

\b Windows
\b0 \
N/A\
\
\

\b\fs36 5. Supported file formats
\b0\fs24 \
\
The supported file format depends on your FFmpeg configuration\
flags used at compilation time.\
\
Basicaly, here is what I get with the default configuration when compiling FFmpeg.\

\b Short list of audio formats:
\b0 \
AAC, AC3, FLAC, MP3, PCM, Vorbis, WMA\
\

\b Short list of video formats:
\b0 \
FLV, H264, MPEG4, Theora, WMV\
\

\b Comprehensive list including both audio and video formats:
\b0 \
aac, aasc, ac3, adpcm_4xm, adpcm_adx, adpcm_ct, adpcm_ea, adpcm_ea_maxis_xa,\
adpcm_ea_r1, adpcm_ea_r2, adpcm_ea_r3, adpcm_ea_xas, adpcm_g726, adpcm_ima_amv,\
adpcm_ima_dk3, adpcm_ima_dk4, adpcm_ima_ea_eacs, adpcm_ima_ea_sead,\
adpcm_ima_iss, adpcm_ima_qt, adpcm_ima_smjpeg, adpcm_ima_wav, adpcm_ima_ws,\
adpcm_ms, adpcm_sbpro_2, adpcm_sbpro_3, adpcm_sbpro_4, adpcm_swf, adpcm_thp,\
adpcm_xa, adpcm_yamaha, alac, als, amrnb, amv, anm, ape, asv1, asv2, atrac1,\
atrac3, aura, aura2, avs, bethsoftvid, bfi, bink, binkaudio_dct, binkaudio_rdft,\
bmp, c93, cavs, cdgraphics, cinepak, cljr, cook, cscd, cyuv, dca, dnxhd, dpx,\
dsicinaudio, dsicinvideo, dvbsub, dvdsub, dvvideo, dxa, eac3, eacmv, eamad,\
eatgq, eatgv, eatqi, eightbps, eightsvx_exp, eightsvx_fib, escape124, ffv1,\
ffvhuff, flac, flashsv, flic, flv, fourxm, fraps, frwu, gif, h261, h263, h263i,\
h264, huffyuv, idcin, iff_byterun1, iff_ilbm, imc, indeo2, indeo3, indeo5,\
interplay_dpcm, interplay_video, jpegls, kgv1, kmvc, loco, mace3, mace6, mdec,\
mimic, mjpeg, mjpegb, mlp, mmvideo, motionpixels, mp1, mp2, mp3, mp3adu, mp3on4,\
mpc7, mpc8, mpeg1video, mpeg2video, mpeg4, mpeg_xvmc, mpegvideo, msmpeg4v1,\
msmpeg4v2, msmpeg4v3, msrle, msvideo1, mszh, nellymoser, nuv, pam, pbm, pcm_alaw,\
pcm_bluray, pcm_dvd, pcm_f32be, pcm_f32le, pcm_f64be, pcm_f64le, pcm_mulaw,\
pcm_s16be, pcm_s16le, pcm_s16le_planar, pcm_s24be, pcm_s24daud, pcm_s24le,\
pcm_s32be, pcm_s32le, pcm_s8, pcm_u16be, pcm_u16le, pcm_u24be, pcm_u24le,\
pcm_u32be, pcm_u32le, pcm_u8, pcm_zork, pcx, pgm, pgmyuv, pgssub, png, ppm,\
ptx, qcelp, qdm2, qdraw, qpeg, qtrle, r210, ra_144, ra_288, rawvideo, rl2, roq,\
roq_dpcm, rpza, rv10, rv20, rv30, rv40, sgi, shorten, sipr, smackaud, smacker,\
smc, snow, sol_dpcm, sonic, sp5x, sunrast, svq1, svq3, targa, theora, thp,\
tiertexseqvideo, tiff, tmv, truehd, truemotion1, truemotion2, truespeech, tscc,\
tta, twinvq, txd, ulti, v210, v210x, vb, vc1, vcr1, vmdaudio, vmdvideo, vmnc,\
vorbis, vp3, vp5, vp6, vp6a, vp6f, vqa, wavpack, wmapro, wmav1, wmav2, wmavoice,\
wmv1, wmv2, wmv3, wnv1, ws_snd1, xan_dpcm, xan_wc3, xl, xsub, yop, zlib, zmbv\
\
\

\b\fs36 6. Currently implemented features\

\b0\fs24 \
- video output with any of the above video formats\
- audio output with any of the above audio formats\
- playing, pausing and stopping a movie\
- getting the movie properties\
- getting the current image\
- scaling the movie drawable to fit a given frame, eventually keeping the original ratio\
\
\

\b\fs36 7. Currently not implemented features\

\b0\fs24 \
- seeking in the movie\
\
These [for now] missing features should be available soon as I am\
trying to finish a full implementation of this class.\
\
\

\b\fs36 8. Sample code
\b0\fs24 \
\
Here is a short example showing how to use sfe::Movie:\
\
\pard\pardeftab720\ql\qnatural

\f1\fs26 \cf0 \cb3 \CocoaLigature1 int main()\
\{\
    sf::RenderWindow window(sf::VideoMode(640, 480), "SFE Movie Player");\
    sfe::Movie movie;\
\
    if (!movie.OpenFromFile("movie.avi"))\
        return 1;\
\
    movie.ResizeToFrame(0, 0, 640, 480);\
    movie.Play();\
\
    while (window.IsOpened())\
    \{\
        sf::Event ev;\
        while (window.GetEvent(ev))\
        \{\
            if (ev.Type == sf::Event::Closed)\
                window.Close();\
        \}\
\
        window.Clear();\
        window.Draw(movie);\
        window.Display();\
    \}\
\
    return 0;\
\}\

\f0\fs24 \cf2 \cb1 \CocoaLigature0 \
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b\fs36 \cf0 9. Contact
\b0\fs24 \cf2 \
\pard\pardeftab720\ql\qnatural
\cf2 \
If you have question or feedback, you can contact me at <ceylow@gmail.com>.\
\
\
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\b\fs36 \cf0 10. Thanks
\b0\fs24 \cf2 \
\pard\pardeftab720\ql\qnatural
\cf2 \
I (Lucas Soltic) would like to thank some people for their great help:\
- Laurent Gomilla for his work on SFML\
- Alexandre Janniaux for his help on the Linux port of sfeMovie\
- Martin Bohme for its FFmpeg tutorial (http://dranger.com/ffmpeg/)\
- Xorlium and timidouveg for their video integration works from which was partly inspired sfe::Movie (see http://www.sfml-dev.org/wiki/en/sources/video_integration and http://www.sfml-dev.org/wiki/fr/tutoriels/integrervideo)\
\
\
}