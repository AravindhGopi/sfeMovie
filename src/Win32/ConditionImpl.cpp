#include "ConditionImpl.h"ConditionImpl::ConditionImpl(int& var) :m_conditionnedVar(var),m_mutex(){	m_cond = CreateEvent(NULL, FALSE, FALSE, NULL);}ConditionImpl::~ConditionImpl(void){}void ConditionImpl::waitAndRetain(int value){	m_mutex.Lock();		while (m_conditionnedVar != value)		WaitForSingleObject(m_cond, INFINITE);}void ConditionImpl::release(void){	m_mutex.Unlock();}void ConditionImpl::signal(void){	SetEvent(m_cond);}